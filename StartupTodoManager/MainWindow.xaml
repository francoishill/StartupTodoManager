<Window x:Class="StartupTodoManager.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local='clr-namespace:StartupTodoManager'
		xmlns:sharedclasses='clr-namespace:SharedClasses;assembly=_OwnAppsSharedDll'
		xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
		xmlns:wpftoolkitextended='clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended'
		Title="Startup Todo's"
		Icon='app.ico'
		Height="700"
		Width="1200"
		Loaded='Window_Loaded'
		WindowStartupLocation='CenterScreen'
		Closing='Window_Closing'
		StateChanged='Window_StateChanged'>
	<Window.Resources>
		<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
						 Color="Transparent" />
		<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
						 Color="Black" />
		<sharedclasses:BooleanToVisibilityConverter x:Key='booleanToVisibilityConverter' />
		<sharedclasses:BooleanToOpacityConverter x:Key='booleanToOpacityConverter' />
		<sharedclasses:BooleanToTextWrappingConverter x:Key='booleanToTextWrappingConverter' />
		<sharedclasses:OppositeBooleanConverter x:Key='oppositeBooleanConverter' />
		<local:BoolErrorTrueToBrushConverter x:Key='boolErrorTrueToBrushConverter' />
		<DataTemplate x:Key="templateForTheContent"
					  DataType="{x:Type TextBox}">
			<DockPanel LastChildFill='True'
					   Tag='{Binding FileName}'>
				<DockPanel DockPanel.Dock='Bottom'>
					<CheckBox DockPanel.Dock='Left'
							  x:Name='checkBoxIsReadOnly'
							  Content='Readonly'
							  FontSize='10'
							  VerticalAlignment='Center'
							  IsChecked='True' />
					<CheckBox DockPanel.Dock='Left'
							  x:Name='checkBoxIsTextWrapped'
							  Margin='10,0,0,0'
							  Content='Wrap text'
							  FontSize='10'
							  VerticalAlignment='Center'
							  IsChecked='True' />
					<CheckBox DockPanel.Dock='Left'
							  x:Name='checkBoxListViewActive'
							  Margin='10,0,0,0'
							  IsChecked='True'
							  Content='List view'
							  FontSize='10'
							  VerticalAlignment='Center' />
					<CheckBox DockPanel.Dock='Right'
							  IsChecked='{Binding HasUnsavedChanges}'
							  IsEnabled='False'
							  Content='HasUnsavedChanges' />
					<Slider x:Name='sliderFontSize'
							DockPanel.Dock='Right'
							Minimum='6'
							Maximum='40'
							HorizontalAlignment='Right'
							Value='16'
							Width='300' />
				</DockPanel>
				<Grid DockPanel.Dock='Top'>
					<TextBox x:Name='contentTextbox'
							 IsReadOnly='{Binding IsChecked, ElementName=checkBoxIsReadOnly}'
							 FontSize='{Binding Value, ElementName=sliderFontSize}'
							 Visibility='{Binding IsChecked, ElementName=checkBoxListViewActive, Converter={StaticResource booleanToVisibilityConverter}, ConverterParameter=opposite}'
							 TextWrapping='{Binding IsChecked, ElementName=checkBoxIsTextWrapped, Converter={StaticResource booleanToTextWrappingConverter}}'
							 HorizontalScrollBarVisibility='Auto'
							 VerticalScrollBarVisibility='Auto'
							 IsReadOnlyCaretVisible='True'
							 Text='{Binding FileContent, UpdateSourceTrigger=PropertyChanged}'
							 AcceptsReturn='True'
							 AcceptsTab='True' />
					<ListBox ItemsSource='{Binding TodoLines}'
							 Visibility='{Binding IsChecked, ElementName=checkBoxListViewActive, Converter={StaticResource booleanToVisibilityConverter}}'
							 SelectionChanged='ListBox_SelectionChanged'>
						<ListBox.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation='Horizontal'
											Margin='20,10,0,0'
											Opacity='{Binding IsComplete, Converter={StaticResource booleanToOpacityConverter}, ConverterParameter=opposite0.2}'>
									<CheckBox IsChecked='{Binding IsComplete}'
											  IsEnabled='{Binding IsChecked, ElementName=checkBoxIsReadOnly, Converter={StaticResource oppositeBooleanConverter}}'
											  VerticalAlignment='Center' />
									<TextBox IsReadOnly='{Binding IsChecked, ElementName=checkBoxIsReadOnly}'
											 IsReadOnlyCaretVisible='True'
											 Margin='10,0,0,0'
											 Padding='0,0,20,0'
											 MinWidth='100'
											 FontSize='{Binding Value, ElementName=sliderFontSize}'
											 Text='{Binding LineText, UpdateSourceTrigger=PropertyChanged}' />
									<wpftoolkitextended:DateTimePicker Value='{Binding DueDate}'
																	   IsEnabled='{Binding IsChecked, ElementName=checkBoxIsReadOnly, Converter={StaticResource oppositeBooleanConverter}}'
																	   Opacity='{Binding HasDueDate, Converter={StaticResource booleanToOpacityConverter}, ConverterParameter=0.1}'
																	   Watermark='yyyy-MM-dd at HH:mm'
																	   FontSize='{Binding Value, ElementName=sliderFontSize}'
																	   Foreground='{Binding IsDue, Converter={StaticResource boolErrorTrueToBrushConverter}}'
																	   Margin='10,0,0,0'
																	   Format='Custom'
																	   FormatString='yyyy-MM-dd \a\t HH:mm' />
									<wpftoolkitextended:DateTimePicker Value='{Binding ReminderDate}'
																	   IsEnabled='False'
																	   Opacity='{Binding HasDueDate, Converter={StaticResource booleanToOpacityConverter}, ConverterParameter=0.1}'
																	   Watermark='yyyy-MM-dd at HH:mm'
																	   FontSize='10'
																	   Foreground='Gray'
																	   Margin='10,0,0,0'
																	   Format='Custom'
																	   FormatString='yyyy-MM-dd \a\t HH:mm' />
								</StackPanel>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
				</Grid>
			</DockPanel>
		</DataTemplate>

		<DataTemplate x:Key="templateForTheHeader"
					  DataType="{x:Type TabItem}">
			<TextBlock Text="{Binding FileName}"
					   FontSize='20'
					   Foreground='{Binding HasDueItems, Converter={StaticResource boolErrorTrueToBrushConverter}}'>
				<TextBlock.ContextMenu>
					<ContextMenu>
						<MenuItem Header='Open in explorer'
								  Click='MenuitemOpenInExplorer_Click' />
						<MenuItem Header='Delete todo file'
								  Click='MenuitemDeleteTodoFile_Click' />
					</ContextMenu>
				</TextBlock.ContextMenu>
			</TextBlock>
		</DataTemplate>
	</Window.Resources>
	<Window.ContextMenu>
		<ContextMenu>
			<MenuItem Header='Add todo file'
					  Click='MenuitemAddTodoFile_Click' />
		</ContextMenu>
	</Window.ContextMenu>
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo>
		</TaskbarItemInfo>
	</Window.TaskbarItemInfo>
	<Grid>
		<sharedclasses:NotificationAreaIcon x:Name='trayIcon'
											Text="Startup Todo Manager"
											Icon="app.ico"
											MouseLeftButtonDown='OnNotifyIconLeftButtonDown'>
			<sharedclasses:NotificationAreaIcon.MenuItems>
				<forms:MenuItem Text="Show"
								Click="OnMenuItemShowClick"
								DefaultItem="True" />
				<forms:MenuItem Text='About'
								Click='OnMenuItemAboutClick' />
				<forms:MenuItem Text="-" />
				<forms:MenuItem Text="Exit"
								Click="OnMenuItemExitClick" />
			</sharedclasses:NotificationAreaIcon.MenuItems>
		</sharedclasses:NotificationAreaIcon>
	<TabControl TabStripPlacement='Left'
				Name='tabControl1'
				Margin='0 0 0 20'
				ItemTemplate='{StaticResource templateForTheHeader}'
				ContentTemplate='{StaticResource templateForTheContent}'>
	</TabControl>
		<Label Content='_About'
			   FontSize='10'
			   Foreground='Gray'
			   VerticalAlignment='Bottom'
			   HorizontalAlignment='Right'
			   Cursor='Hand'
			   MouseLeftButtonDown='labelAbout_MouseLeftButtonDown' />
	</Grid>
</Window>
